{"changed":true,"filter":false,"title":"api.yaml","tooltip":"/order-app/api.yaml","value":"---\nswagger: \"2.0\"\ninfo:\n  version: \"1.0\"\n  title: \"order-app\"\nbasePath: \"/Dev\"\nschemes:\n- \"https\"\npaths:\n  /orders:\n    get:\n      responses: {}\n      x-amazon-apigateway-integration:\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        type: \"aws_proxy\"\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations\n        passthroughBehavior: \"when_no_match\"\n    post:\n      consumes:\n      - \"application/json\"\n      produces:\n      - \"application/json\"\n      responses:\n        \"200\":\n          description: \"200 response\"\n      x-amazon-apigateway-integration:\n        type: \"aws\"\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:sqs:path/${AWS::AccountId}/${OrderQueue.QueueName}\n        responses:\n          default:\n            statusCode: \"200\"\n        requestParameters:\n          integration.request.header.Content-Type: \"'application/x-www-form-urlencoded'\"\n        requestTemplates:\n          application/json: 'Action=SendMessage&MessageBody={\"data\":$input.json(''$''),\"cognito_userid\":\"$context.authorizer.claims[''cognito:username'']\"}'\n\n        passthroughBehavior: \"when_no_match\"\n  /ordersSync:\n    post:\n      consumes:\n      - \"application/json\"\n      produces:\n      - \"application/json\"\n      responses: {}\n      x-amazon-apigateway-integration:\n        type: \"aws_proxy\"\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrdersSync.Arn}/invocations\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n  /orders/{orderId+}:\n    get:\n      responses: {}\n      x-amazon-apigateway-integration:\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        type: \"aws_proxy\"\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations\n        passthroughBehavior: \"when_no_match\"\n    put:\n      produces:\n      - \"application/json\"\n      parameters:\n      - name: \"orderId\"\n        in: \"path\"\n        required: true\n        type: \"string\"\n      responses: {}\n      x-amazon-apigateway-integration:\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n    delete:\n      responses: {}\n      x-amazon-apigateway-integration:\n        credentials: \n          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]\n        type: \"aws_proxy\"\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteOrder.Arn}/invocations\n        passthroughBehavior: \"when_no_match\"\n      security:\n        - MyCognitoAuthorizer:\n            - \"order-api/delete_order\"\n\n\nexport USERNAME='mohammedabu'\nexport PASSWORD='<MY-DUMMY-PASSWORD>'\n","undoManager":{"mark":44,"position":48,"stack":[[{"start":{"row":0,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""],"id":1}],[{"start":{"row":19,"column":44},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":20,"column":0},"end":{"row":20,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":8},"action":"remove","lines":["        "],"id":3},{"start":{"row":20,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","",""]}],[{"start":{"row":19,"column":44},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":20,"column":0},"end":{"row":20,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":44},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":38,"column":0},"end":{"row":38,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":8},"action":"remove","lines":["        "],"id":9},{"start":{"row":38,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""]}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","        ","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","","","",""],"id":11},{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""]}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""],"id":12},{"start":{"row":0,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\"",""]}],[{"start":{"row":67,"column":25},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":68,"column":0},"end":{"row":68,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"remove","lines":["    "],"id":15}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":4},"action":"remove","lines":["    "],"id":16}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":0},"action":"remove","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\"","",""],"id":18},{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\"","    delete:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","",""]}],[{"start":{"row":20,"column":0},"end":{"row":36,"column":44},"action":"remove","lines":["    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\""],"id":20},{"start":{"row":20,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses:","        \"200\":","          description: \"200 response\"","      x-amazon-apigateway-integration:","        type: \"aws\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:sqs:path/${AWS::AccountId}/${OrderQueue.QueueName}","        responses:","          default:","            statusCode: \"200\"","        requestParameters:","          integration.request.header.Content-Type: \"'application/x-www-form-urlencoded'\"","        requestTemplates:","          application/json: \"Action=SendMessage&MessageBody={\\\"data\\\":$input.json('$')}\"","        passthroughBehavior: \"when_no_match\"",""]}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":2},"action":"insert","lines":["  "],"id":21}],[{"start":{"row":43,"column":2},"end":{"row":43,"column":3},"action":"insert","lines":["/"],"id":23},{"start":{"row":43,"column":3},"end":{"row":43,"column":4},"action":"insert","lines":["o"]},{"start":{"row":43,"column":4},"end":{"row":43,"column":5},"action":"insert","lines":["r"]},{"start":{"row":43,"column":5},"end":{"row":43,"column":6},"action":"insert","lines":["d"]},{"start":{"row":43,"column":6},"end":{"row":43,"column":7},"action":"insert","lines":["e"]},{"start":{"row":43,"column":7},"end":{"row":43,"column":8},"action":"insert","lines":["r"]},{"start":{"row":43,"column":8},"end":{"row":43,"column":9},"action":"insert","lines":["s"]}],[{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":["-"],"id":24}],[{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"remove","lines":["-"],"id":25}],[{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":["/"],"id":26},{"start":{"row":43,"column":10},"end":{"row":43,"column":11},"action":"insert","lines":["s"]},{"start":{"row":43,"column":11},"end":{"row":43,"column":12},"action":"insert","lines":["y"]},{"start":{"row":43,"column":12},"end":{"row":43,"column":13},"action":"insert","lines":["n"]},{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":["c"]}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"remove","lines":["c"],"id":27},{"start":{"row":43,"column":12},"end":{"row":43,"column":13},"action":"remove","lines":["n"]},{"start":{"row":43,"column":11},"end":{"row":43,"column":12},"action":"remove","lines":["y"]},{"start":{"row":43,"column":10},"end":{"row":43,"column":11},"action":"remove","lines":["s"]},{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"remove","lines":["/"]}],[{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":["S"],"id":28},{"start":{"row":43,"column":10},"end":{"row":43,"column":11},"action":"insert","lines":["y"]},{"start":{"row":43,"column":11},"end":{"row":43,"column":12},"action":"insert","lines":["n"]},{"start":{"row":43,"column":12},"end":{"row":43,"column":13},"action":"insert","lines":["c"]}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":["/"],"id":29}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"remove","lines":["/"],"id":30}],[{"start":{"row":43,"column":13},"end":{"row":43,"column":14},"action":"insert","lines":[":"],"id":31}],[{"start":{"row":43,"column":14},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":32},{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":44,"column":2},"end":{"row":62,"column":0},"action":"insert","lines":["    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","",""],"id":33}],[{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"remove","lines":["  "],"id":34},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"remove","lines":["  "]},{"start":{"row":46,"column":0},"end":{"row":46,"column":2},"action":"remove","lines":["  "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":2},"action":"remove","lines":["  "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":2},"action":"remove","lines":["  "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"remove","lines":["  "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":2},"action":"remove","lines":["  "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":2},"action":"remove","lines":["  "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":2},"action":"remove","lines":["  "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":2},"action":"remove","lines":["  "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":2},"action":"remove","lines":["  "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":2},"action":"remove","lines":["  "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":2},"action":"remove","lines":["  "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":2},"action":"remove","lines":["  "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":2},"action":"remove","lines":["  "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":2},"action":"remove","lines":["  "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":2},"action":"remove","lines":["  "]}],[{"start":{"row":56,"column":96},"end":{"row":56,"column":97},"action":"insert","lines":["S"],"id":35}],[{"start":{"row":56,"column":86},"end":{"row":56,"column":97},"action":"remove","lines":["PostOrdersS"],"id":36},{"start":{"row":56,"column":86},"end":{"row":56,"column":100},"action":"insert","lines":["PostOrdersSync"]}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "],"id":37}],[{"start":{"row":61,"column":2},"end":{"row":62,"column":0},"action":"remove","lines":["",""],"id":38},{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"remove","lines":["  "]},{"start":{"row":60,"column":42},"end":{"row":61,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"insert","lines":["  "],"id":39},{"start":{"row":46,"column":0},"end":{"row":46,"column":2},"action":"insert","lines":["  "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":2},"action":"insert","lines":["  "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":2},"action":"insert","lines":["  "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"insert","lines":["  "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":2},"action":"insert","lines":["  "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":2},"action":"insert","lines":["  "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":2},"action":"insert","lines":["  "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":2},"action":"insert","lines":["  "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":2},"action":"insert","lines":["  "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":2},"action":"insert","lines":["  "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":2},"action":"insert","lines":["  "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":2},"action":"insert","lines":["  "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":2},"action":"insert","lines":["  "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":2},"action":"insert","lines":["  "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":20,"column":9},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":40},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":20,"column":8},"end":{"row":21,"column":4},"action":"remove","lines":[":","    "],"id":47}],[{"start":{"row":20,"column":8},"end":{"row":20,"column":9},"action":"insert","lines":[":"],"id":48}],[{"start":{"row":40,"column":0},"end":{"row":41,"column":88},"action":"remove","lines":["        requestTemplates:","          application/json: \"Action=SendMessage&MessageBody={\\\"data\\\":$input.json('$')}\""],"id":49},{"start":{"row":40,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["requestTemplates:","  application/json: 'Action=SendMessage&MessageBody={\"data\":$input.json(''$''),\"cognito_userid\":\"$context.authorizer.claims[''cognito:username'']\"}'",""]}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["  "],"id":50},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["  "],"id":51},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["  "],"id":52},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":2},"action":"insert","lines":["  "],"id":53},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":102,"column":44},"end":{"row":103,"column":0},"action":"insert","lines":["",""],"id":54},{"start":{"row":103,"column":0},"end":{"row":103,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":2},"action":"remove","lines":["  "],"id":55}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":6},"action":"remove","lines":["      "],"id":57},{"start":{"row":103,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["security:","  - MyCognitoAuthorizer:","      - \"order-api/delete_order\"",""]}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":2},"action":"insert","lines":["  "],"id":58},{"start":{"row":104,"column":0},"end":{"row":104,"column":2},"action":"insert","lines":["  "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":2},"action":"insert","lines":["  "],"id":59},{"start":{"row":104,"column":0},"end":{"row":104,"column":2},"action":"insert","lines":["  "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":2},"action":"insert","lines":["  "],"id":60},{"start":{"row":104,"column":0},"end":{"row":104,"column":2},"action":"insert","lines":["  "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":108,"column":0},"end":{"row":110,"column":0},"action":"insert","lines":["export USERNAME='<EMAIL_ADDRESS>'","export PASSWORD='<MY-DUMMY-PASSWORD>'",""],"id":61}],[{"start":{"row":108,"column":18},"end":{"row":108,"column":31},"action":"remove","lines":["EMAIL_ADDRESS"],"id":62},{"start":{"row":108,"column":17},"end":{"row":108,"column":18},"action":"remove","lines":["<"]}],[{"start":{"row":108,"column":17},"end":{"row":108,"column":18},"action":"remove","lines":[">"],"id":63}],[{"start":{"row":108,"column":17},"end":{"row":108,"column":18},"action":"insert","lines":["m"],"id":64},{"start":{"row":108,"column":18},"end":{"row":108,"column":19},"action":"insert","lines":["o"]},{"start":{"row":108,"column":19},"end":{"row":108,"column":20},"action":"insert","lines":["h"]},{"start":{"row":108,"column":20},"end":{"row":108,"column":21},"action":"insert","lines":["a"]},{"start":{"row":108,"column":21},"end":{"row":108,"column":22},"action":"insert","lines":["m"]},{"start":{"row":108,"column":22},"end":{"row":108,"column":23},"action":"insert","lines":["m"]},{"start":{"row":108,"column":23},"end":{"row":108,"column":24},"action":"insert","lines":["e"]},{"start":{"row":108,"column":24},"end":{"row":108,"column":25},"action":"insert","lines":["d"]},{"start":{"row":108,"column":25},"end":{"row":108,"column":26},"action":"insert","lines":["a"]},{"start":{"row":108,"column":26},"end":{"row":108,"column":27},"action":"insert","lines":["b"]},{"start":{"row":108,"column":27},"end":{"row":108,"column":28},"action":"insert","lines":["u"]}],[{"start":{"row":108,"column":0},"end":{"row":110,"column":0},"action":"remove","lines":["export USERNAME='mohammedabulsoud4@gmail.com'","export PASSWORD='<MY-DUMMY-PASSWORD>'",""],"id":72}],[{"start":{"row":108,"column":40},"end":{"row":108,"column":41},"action":"insert","lines":["."],"id":72},{"start":{"row":108,"column":41},"end":{"row":108,"column":42},"action":"insert","lines":["c"]},{"start":{"row":108,"column":42},"end":{"row":108,"column":43},"action":"insert","lines":["o"]},{"start":{"row":108,"column":43},"end":{"row":108,"column":44},"action":"insert","lines":["m"]}],[{"start":{"row":108,"column":35},"end":{"row":108,"column":39},"action":"remove","lines":["gmai"],"id":73},{"start":{"row":108,"column":35},"end":{"row":108,"column":40},"action":"insert","lines":["gmail"]}],[{"start":{"row":108,"column":34},"end":{"row":108,"column":35},"action":"insert","lines":["@"],"id":74},{"start":{"row":108,"column":35},"end":{"row":108,"column":36},"action":"insert","lines":["g"]},{"start":{"row":108,"column":36},"end":{"row":108,"column":37},"action":"insert","lines":["m"]},{"start":{"row":108,"column":37},"end":{"row":108,"column":38},"action":"insert","lines":["a"]},{"start":{"row":108,"column":38},"end":{"row":108,"column":39},"action":"insert","lines":["i"]}],[{"start":{"row":108,"column":35},"end":{"row":108,"column":36},"action":"remove","lines":["g"],"id":75},{"start":{"row":108,"column":34},"end":{"row":108,"column":35},"action":"remove","lines":["2"]}],[{"start":{"row":108,"column":34},"end":{"row":108,"column":35},"action":"insert","lines":["2"],"id":76},{"start":{"row":108,"column":35},"end":{"row":108,"column":36},"action":"insert","lines":["g"]}],[{"start":{"row":108,"column":34},"end":{"row":108,"column":35},"action":"remove","lines":["2"],"id":77}],[{"start":{"row":108,"column":28},"end":{"row":108,"column":29},"action":"insert","lines":["l"],"id":78},{"start":{"row":108,"column":29},"end":{"row":108,"column":30},"action":"insert","lines":["s"]},{"start":{"row":108,"column":30},"end":{"row":108,"column":31},"action":"insert","lines":["o"]},{"start":{"row":108,"column":31},"end":{"row":108,"column":32},"action":"insert","lines":["u"]},{"start":{"row":108,"column":32},"end":{"row":108,"column":33},"action":"insert","lines":["d"]},{"start":{"row":108,"column":33},"end":{"row":108,"column":34},"action":"insert","lines":["4"]},{"start":{"row":108,"column":34},"end":{"row":108,"column":35},"action":"insert","lines":["2"]}]]},"ace":{"folds":[],"scrolltop":1422,"scrollleft":0,"selection":{"start":{"row":108,"column":28},"end":{"row":108,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":87,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1687559404876}